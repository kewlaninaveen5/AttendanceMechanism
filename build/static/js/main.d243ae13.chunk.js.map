{"version":3,"sources":["Components/UI/Button/Button.js","axiosOrders.js","Components/UI/Spinner/Spinner.js","Components/UI/Input/Input.js","Containers/RegistrationData/RegistrationData.js","Containers/LoginData/LoginData.js","Components/RegisterPanel/RegisterPanel.js","Components/StudentLogin/StudentLogin.js","Containers/StudentsList/Student/Student.js","Containers/StudentsList/StudentsList.js","Components/TeacherLogin/TeacherLogin.js","Containers/LoggedInPanel/LoggedInPanel.js","Components/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["button","props","disabled","className","buttonType","join","onClick","clicked","children","axiosInstance","axios","create","baseURL","spinner","Classes","Loader","input","inputElements","inputClasses","invalid","shouldValidate","touched","push","elementType","onChange","changed","elementConfig","value","options","map","option","displayValue","label","RegistrationData","state","orderForm","name","type","placeholder","validation","required","valid","email","Password","formIsValid","loading","orderHandler","event","preventDefault","formData","elementIdentifier","setState","UserData","UserType","userDetails","post","then","response","history","catch","error","console","log","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","key","this","id","config","form","onSubmit","formElement","Component","TEACHER","STUDENT","RegisterPanel","Registering","LogInDetails","registerStudent","registerTeacher","login","RegisterInput","LoginInput","studentLogin","students","StudentsList","Students","get","res","fetchedStudents","data","err","order","teacherLogin","LoggedInPanel","TeacherLogin","StudentLogin","Layout","LoggedIn","loggedInTeacher","loggedInStudent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d243ae13.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={['Button' , [props.buttonType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >\r\n        {props.children}\r\n        \r\n    </button>);\r\n\r\nexport default button;","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://technokids-cfec5-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default axiosInstance;","import React from 'react';\r\nimport Classes from './Spinner.css';\r\n\r\nconst spinner = () => {\r\n   return(\r\n        <div className={Classes.Loader}>Loading...</div>\r\n\r\n   ); };\r\n\r\nexport default spinner;","import React from 'react';\r\nimport Classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElements = null;\r\n    const inputClasses = ['InputElement'];\r\n    \r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push('Invalid');\r\n        \r\n    }\r\n\r\n    switch (props.elementType) {\r\n        \r\n        case('input'):\r\n            inputElements = <input \r\n            className={inputClasses.join(' ')} \r\n            onChange={props.changed}\r\n            {...props.elementConfig} \r\n            value={props.value} />;\r\n        break;\r\n        case('textarea'):\r\n            inputElements = <textarea \r\n            className={inputClasses.join(' ')} \r\n            onChange={props.changed}\r\n            {...props.elementConfig}\r\n            value={props.value} />;\r\n        break;\r\n        case ('select'):\r\n            inputElements = (\r\n            <select \r\n            onChange={props.changed}\r\n            className={inputClasses.join(' ')} \r\n            value={props.value} >\r\n                {props.elementConfig.options.map(option => (\r\n                    <option \r\n                        key={option.value}\r\n                        \r\n                         value={option.value} >\r\n                             {option.displayValue}\r\n                    </option>\r\n                )\r\n                )}\r\n            </select>); \r\n            break;  \r\n        default:\r\n        inputElements = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig}\r\n            value={props.value} />;\r\n\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className='Input' >\r\n            <label className='Label' >{props.label}</label>\r\n            {inputElements}\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport Classes from './RegistrationData.css';\r\nimport axios from '../../axiosOrders';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport Input from '../../Components/UI/Input/Input';\r\n\r\n\r\n\r\nclass RegistrationData extends Component {\r\n    state = {\r\n        orderForm: {\r\n                name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: 'Your Name'\r\n                    },\r\n                value: '',\r\n                validation: {\r\n                        required: true\r\n                    },\r\n                valid: false,\r\n                touched: false\r\n                },\r\n                email:  {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: 'Your Email'\r\n                    },\r\n                value: '',\r\n                validation: {\r\n                        required: true\r\n                    },\r\n                valid: false,\r\n                touched: false\r\n                },\r\n                Password:  {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: \"\",\r\n                        placeholder: 'Enter a Password'\r\n                    },\r\n                value: '',\r\n                validation: {\r\n                        required: true\r\n                    },\r\n                valid: false,\r\n                touched: false\r\n                },\r\n                            \r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    };\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let elementIdentifier in this.state.orderForm) {\r\n            formData[elementIdentifier] = this.state.orderForm[elementIdentifier].value\r\n        }\r\n    \r\n        this.setState({loading: true});\r\n    \r\n        const UserData = {            \r\n            UserType: this.props.UserType,\r\n            userDetails: formData\r\n            \r\n        }\r\n\r\n        if (this.props.UserType === 'Teacher') {\r\n            axios.post('teacher.json', UserData)\r\n        .then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error =>{\r\n            this.setState({loading: false})\r\n        });\r\n        }\r\n\r\n        if (this.props.UserType === 'Student') {\r\n        axios.post('students.json', UserData)\r\n        .then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error =>{\r\n            this.setState({loading: false})\r\n        });\r\n    };\r\n    //     this.setState({showingModalForPurchasingBurger: false});\r\n        console.log(UserData);\r\n        \r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n               \r\n        if (rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        // console.log(event.target.value)\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n            //this is done to copy the state deeply\r\n            //since the state is nested objects and\r\n            // so inner objects didnt get copied in first spread operator\r\n        const updatedFormElement = {                            \r\n            ...updatedOrderForm[inputIdentifier]                \r\n        }\r\n        updatedFormElement.value=event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n        }\r\n        \r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid}); \r\n\r\n    \r\n    };                                                          \r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler} >\r\n                    {/* <Input elementType='...' elementConfig='...' Value='...' />   */}\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input \r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            invalid={!formElement.config.value}\r\n                            shouldValidate={formElement.config.validation}\r\n                            touched={formElement.config.touched}\r\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n\r\n                             />\r\n                    ))}  \r\n                    <Button buttonType='Success' disabled={!this.state.formIsValid} >REGISTER</Button>\r\n                </form>\r\n        );\r\n        if (this.state.loading) {\r\n            form= <Spinner />\r\n        }\r\n        return (\r\n            <div className={Classes.RegistrationData} >\r\n                {/* {console.log('Hello world')} */}\r\n                \r\n                {form}        \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default RegistrationData;","import React, { Component } from 'react';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport Classes from './LoginData.css';\r\n// import axios from '../../axiosOrders';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport Input from '../../Components/UI/Input/Input';\r\n\r\n\r\n\r\nclass RegistrationData extends Component {\r\n    state = {\r\n        orderForm: {\r\n                email:  {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: 'Your Email'\r\n                    },\r\n                value: '',\r\n                validation: {\r\n                        required: true\r\n                    },\r\n                valid: false,\r\n                touched: false\r\n                },\r\n                Password:  {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: \"\",\r\n                        placeholder: 'Enter a Password'\r\n                    },\r\n                value: '',\r\n                validation: {\r\n                        required: true\r\n                    },\r\n                valid: false,\r\n                touched: false\r\n                },\r\n                            \r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    };\r\n\r\n    orderHandler = (event) => {\r\n        // event.preventDefault();\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n               \r\n        if (rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        // console.log(event.target.value)\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n            //this is done to copy the state deeply\r\n            //since the state is nested objects and\r\n            // so inner objects didnt get copied in first spread operator\r\n        const updatedFormElement = {                            \r\n            ...updatedOrderForm[inputIdentifier]                \r\n        }\r\n        updatedFormElement.value=event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n        }\r\n        \r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid}); \r\n\r\n    \r\n    };                                                          \r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler} >\r\n                    {/* <Input elementType='...' elementConfig='...' Value='...' />   */}\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input \r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            invalid={!formElement.config.value}\r\n                            shouldValidate={formElement.config.validation}\r\n                            touched={formElement.config.touched}\r\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n\r\n                             />\r\n                    ))}  \r\n                    <Button buttonType='Success' disabled={!this.state.formIsValid}  >Login</Button>\r\n                </form>\r\n        );\r\n        if (this.state.loading) {\r\n            form= <Spinner />\r\n        }\r\n        return (\r\n            <div className={Classes.RegistrationData} >\r\n                {console.log('Hello world')}\r\n                <h3>Enter Your Login Details</h3>\r\n                {form}        \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default RegistrationData;","import React, { Component } from \"react\";\r\nimport Button from '../UI/Button/Button';\r\nimport RegistrationData from '../../Containers/RegistrationData/RegistrationData';\r\nimport LoginData from '../../Containers/LoginData/LoginData';\r\n\r\nconst TEACHER = 'Teacher';\r\nconst STUDENT = 'Student'; \r\n\r\nclass RegisterPanel extends Component {\r\n\r\n    state = {\r\n        Registering: false,\r\n        UserType: null,\r\n        LogInDetails: false\r\n    }\r\n    \r\n    registerStudent = () => {\r\n        //   const currentValue = this.state.Registering;\r\n          this.setState({Registering: true, UserType: STUDENT, LogInDetails: false});\r\n          \r\n      }  \r\n      \r\n      registerTeacher = () => {\r\n        //   const currentValue = this.state.Registering;\r\n          this.setState({Registering: true, UserType: TEACHER, LogInDetails: false});\r\n          \r\n      } \r\n\r\n      login = () => {\r\n          this.setState({LogInDetails: true, Registering: false})\r\n          \r\n      }\r\n\r\n    render () { \r\n        let RegisterInput = null;\r\n        if (this.state.Registering) {\r\n            RegisterInput = <div>\r\n                <h3>Registering as: {this.state.UserType} </h3>\r\n             <RegistrationData UserType={this.state.UserType} />\r\n            </div>\r\n        }\r\n\r\n        let LoginInput = this.state.LogInDetails ? <div>\r\n            <LoginData />\r\n            </div> : \r\n            <Button buttonType='Registration' clicked={this.login} >LOGIN</Button>\r\n        \r\n\r\n        // let LoginInput = <Button buttonType='Registration' clicked={this.login} >LOGIN</Button>;\r\n        // if (this.state.LogInDetails) {\r\n        //     LoginInput = <div>\r\n            \r\n        //      <LoginData />\r\n        //     </div>\r\n        // }     \r\n           \r\n        return (\r\n            <div>\r\n                <Button buttonType='Registration' clicked={this.registerStudent} >\r\n                    Register as a Student</Button>\r\n                <Button buttonType='Registration' clicked={this.registerTeacher}>\r\n                    Register as a Teacher</Button>\r\n                {RegisterInput}\r\n                {LoginInput}\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPanel;","import React from 'react';\r\n\r\nconst studentLogin = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3> Welcome to Student Portal </h3>\r\n            <h3>You will be marked Present</h3>\r\n        </div>\r\n        \r\n\r\n    )\r\n};\r\n\r\nexport default studentLogin;","import React from 'react';\r\nimport './Student.css';\r\n\r\nconst students = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {console.log(props.key)}\r\n            <div>\r\n                <div className='Student'>{props.name} </div>\r\n            <span className='present'>Present</span>\r\n            </div> \r\n            \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default students;","import React, { Component } from 'react';\r\nimport Student from './Student/Student';\r\n// import Order from '../CheckoutPanel/Order/Order';\r\nimport axios from '../../axiosOrders';\r\n// import WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\r\n\r\nclass StudentsList extends Component {\r\n\r\n    state = {\r\n        Students: [],\r\n        loading: true\r\n    };    \r\n    \r\n    componentDidMount () {\r\n            \r\n        axios.get('students.json')\r\n        .then(\r\n            res =>{\r\n            const fetchedStudents= [];\r\n            for (let key in res.data) {\r\n                fetchedStudents.push(\r\n                     {...\r\n                        res.data[key],\r\n                        id: key\r\n                    }\r\n            );\r\n                    \r\n            }\r\n            this.setState({loading: false, Students: fetchedStudents})\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false})\r\n        } )\r\n    };\r\n\r\n    render () {               \r\n\r\n        return (\r\n            <div>\r\n                {console.log(this.state.Students)}\r\n                {this.state.Students.map(order => (\r\n                    <Student\r\n                         key={order.id} \r\n                         name={order.userDetails.name}\r\n                         \r\n                        //    ingredients={order.ingredients}\r\n                        //    price={order.price}    \r\n                           /> \r\n                ))}\r\n                \r\n            </div>\r\n        );\r\n            \r\n        \r\n    };\r\n}\r\n\r\nexport default StudentsList;","import React from 'react';\r\nimport StudentsList from '../../Containers/StudentsList/StudentsList';\r\n\r\nconst teacherLogin = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3> Welcome to Teacher Portal </h3>\r\n        <h3>Your Students are as below</h3>\r\n        <StudentsList />\r\n        \r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default teacherLogin;","import React, { Component } from \"react\";\r\nimport StudentLogin from '../../Components/StudentLogin/StudentLogin';\r\nimport TeacherLogin from '../../Components/TeacherLogin/TeacherLogin';\r\n\r\n \r\nclass LoggedInPanel extends Component {\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div>\r\n                {this.props.UserType == 'Teacher' ? <TeacherLogin /> : <StudentLogin />}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default LoggedInPanel","import React, { Component } from \"react\";\r\nimport RegisterPanel from '../RegisterPanel/RegisterPanel';\r\nimport LoggedInPanel from '../../Containers/LoggedInPanel/LoggedInPanel';\r\nimport './Layout.css';\r\n\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        LoggedIn: false,\r\n        UserType: null\r\n      };\r\n\r\n      loggedInTeacher = () => {\r\n          this.setState({LoggedIn: true, UserType: 'Teacher'})\r\n      }\r\n\r\n      loggedInStudent = () => {\r\n        this.setState({LoggedIn: true, UserType: 'Student'})\r\n    }\r\n      \r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div className=\"Layout\" >\r\n                {this.state.LoggedIn ?\r\n                 <LoggedInPanel UserType={this.state.UserType} /> \r\n                 : <RegisterPanel /> }\r\n                <button onClick={this.loggedInTeacher}>temporary Login as teacher</button>\r\n                <button onClick={this.loggedInStudent}>temporary Login as student</button>\r\n                \r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Layout;\r\n\r\n","import React, { Component } from \"react\";\nimport './App.css';\nimport Layout from './Components/Layout/Layout';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div >\n      <Layout ></Layout>\n    </div>\n    );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}